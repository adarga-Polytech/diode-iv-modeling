/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"assets/samplefiles/T279K.txt\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hc3NldHMvc2FtcGxlZmlsZXMvVDI3OUsudHh0P2VjZmMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL3NhbXBsZWZpbGVzL1QyNzlLLnR4dFwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Fzc2V0cy9zYW1wbGVmaWxlcy9UMjc5Sy50eHRcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"index.html\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC5odG1sPzhiZTkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW5kZXguaHRtbFwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4Lmh0bWxcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(4);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(6)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC5jc3M/Y2I3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9pbmRleC5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9pbmRleC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vaW5kZXguY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9pbmRleC5jc3Ncbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = drawGraph;\n/* This file takes care of plotting the result in a graph.\r\n * I wrote this back when I was learning JavaScript and haven't\r\n * touched it since then (besides linting).\r\n * At the time, I could not find a plotting library that would\r\n * render scientific graphs that could be used directly in a\r\n * publication.\r\n * Also I thought it was a good exercice to code this myself.\r\n */\r\n\r\nfunction changePrecision(precision, number) {\r\n  return Math.round(number * Math.pow(10, precision)) / Math.pow(10, precision);\r\n}\r\n\r\n// returns the min value of an array\r\nfunction min(array) {\r\n  var min = '+Infinity',\r\n    element;\r\n\r\n  for (var i = 1; i < array.length; i++) {\r\n    element = array[i];\r\n    if (element < min && element != '-Infinity') {\r\n      min = element;\r\n\r\n    }\r\n  }\r\n  //alert(min);\r\n  return min;\r\n}\r\n\r\n// returns the max value of an array\r\nfunction max(array) {\r\n  var max;\r\n  for (var i = 0; i < array.length; i++) {\r\n    if (!max || array[i] > max) {\r\n      max = array[i];\r\n    }\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction orderOfMagn(value) {\r\n  return Math.pow(10, Math.floor(log10(Math.abs(value))));\r\n}\r\n\r\nfunction log10(val) {\r\n  return Math.log(val) / Math.log(10);\r\n}\r\n\r\nlet array;\r\n\r\nfunction drawGraph(canvasId, arrayMult, focusedPlot, plotStyle, scaleType, xTitle, yTitle) {\r\n\r\n  //array will be used to build the graph area, max and min, distance between 2 ticks etc.\r\n  array = arrayMult[focusedPlot];\r\n  var xArray = [],\r\n    yArray = [],\r\n    y, xy;\r\n\r\n  for (var i = 0; i <= array.length - 1; i++) {\r\n    xy = array[i];\r\n    y = xy[1];\r\n    if (scaleType == 'logScale') {\r\n      if (y != 0) { //when scale is Log, don't include the points for which y = 0\r\n        xArray.push(xy[0]);\r\n        yArray.push(log10(Math.abs(y)));\r\n      }\r\n    } else {\r\n      xArray.push(xy[0]);\r\n      yArray.push(y);\r\n    }\r\n  }\r\n\r\n  var yMin = min(yArray);\r\n\r\n  if (scaleType == 'logScale' && yMin < -15) {\r\n    var index = yArray.indexOf(yMin);\r\n    xArray.splice(index, 1);\r\n    yArray.splice(index, 1);\r\n  }\r\n\r\n  var xMin = min(xArray),\r\n    xMax = max(xArray);\r\n  yMin = min(yArray);\r\n  var yMax = max(yArray),\r\n\r\n    //alert(xMin);\r\n    xyStep = calcStep(xMin, xMax, yMin, yMax),\r\n    xStep = xyStep[0],\r\n    yStep = xyStep[1],\r\n\r\n    axesMaxMin = calcAxesMaxMin(xMin, xMax, xStep, yMin, yMax, yStep),\r\n    xAxisMin = axesMaxMin[0],\r\n    xAxisMax = axesMaxMin[1],\r\n    yAxisMin = axesMaxMin[2],\r\n    yAxisMax = axesMaxMin[3],\r\n\r\n    canvas = document.getElementById(canvasId),\r\n    context = canvas.getContext('2d'),\r\n    canvasWidth = canvas.width,\r\n    canvasHeight = canvas.height,\r\n    margin = 40.5,\r\n    unitPx = calcUnitPx(xAxisMin, xAxisMax, canvasWidth, yAxisMin, yAxisMax, canvasHeight, margin),\r\n    xUnitPx = unitPx[0],\r\n    yUnitPx = unitPx[1];\r\n\r\n  canvas.height = canvasHeight; //clears the canvas\r\n\r\n  var axesPosition = drawAxis(context, scaleType, margin, xAxisMin, xAxisMax, canvasWidth, xUnitPx, xTitle, yAxisMin, yAxisMax, canvasHeight, yUnitPx, yTitle),\r\n    xAxisPosition = axesPosition[0],\r\n    xTicksSide = axesPosition[1] / Math.abs(axesPosition[1]),\r\n    yAxisPosition = axesPosition[2],\r\n    yTicksSide = axesPosition[3] / Math.abs(axesPosition[3]);\r\n\r\n  drawTicks(context, scaleType, margin, xAxisMin, xAxisMax, xStep, canvasWidth, xUnitPx, xAxisPosition, xTicksSide, yAxisMin, yAxisMax, yStep, canvasHeight, yUnitPx, yAxisPosition, yTicksSide);\r\n\r\n  legend(context, scaleType, arrayMult, plotStyle, margin, xAxisMin, xUnitPx, yAxisMin, yUnitPx, canvasHeight);\r\n\r\n  for (var i = 0; i < arrayMult.length; i++) {\r\n    plot(arrayMult[i], context, scaleType, plotStyle[i], margin, xAxisMin, xAxisMax, canvasWidth, xUnitPx, yAxisMin, yAxisMax, canvasHeight, yUnitPx, yAxisPosition);\r\n  }\r\n}\r\n\r\nfunction calcStep(xMin, xMax, yMin, yMax) {\r\n\r\n  var oOfMagn = orderOfMagn(xMax - xMin),\r\n    xStep = oOfMagn * 0.2,\r\n    xAxisMax,\r\n    xAxisMin;\r\n\r\n  if (xMax - xMin > oOfMagn * 4 / 3) {\r\n    xStep = oOfMagn * 0.5;\r\n  }\r\n  if (xMax - xMin > oOfMagn * 10 / 3) {\r\n    xStep = oOfMagn;\r\n  }\r\n  if (xMax - xMin > oOfMagn * 20 / 3) {\r\n    xStep = oOfMagn * 2;\r\n  }\r\n\r\n  oOfMagn = orderOfMagn(yMax - yMin);\r\n  var yStep = oOfMagn * 0.2,\r\n    yAxisMax,\r\n    yAxisMin;\r\n\r\n  if (yMax - yMin > oOfMagn * 4 / 3) {\r\n    yStep = oOfMagn * 0.5;\r\n  }\r\n  if (yMax - yMin > oOfMagn * 10 / 3) {\r\n    yStep = oOfMagn;\r\n  }\r\n  if (yMax - yMin > oOfMagn * 20 / 3) {\r\n    yStep = oOfMagn * 2;\r\n  }\r\n\r\n  return [xStep, yStep];\r\n}\r\n\r\nfunction calcAxesMaxMin(xMin, xMax, xStep, yMin, yMax, yStep) {\r\n\r\n  var min = [xMin, yMin],\r\n    max = [xMax, yMax],\r\n    step = [xStep, yStep],\r\n    axisMin = [0, 0],\r\n    axisMax = [0, 0];\r\n\r\n  for (var i = 0; i <= 1; i++) {\r\n    if (min[i] <= 0) {\r\n      while (axisMin[i] >= min[i]) {\r\n        axisMin[i] = axisMin[i] - step[i];\r\n      }\r\n      axisMax[i] = axisMin[i];\r\n      while (axisMax[i] <= max[i]) {\r\n        axisMax[i] = axisMax[i] + step[i];\r\n      }\r\n    } else {\r\n      while (axisMax[i] <= max[i]) {\r\n        axisMax[i] = axisMax[i] + step[i];\r\n      }\r\n      axisMin[i] = axisMax[i];\r\n      while (axisMin[i] >= min[i]) {\r\n        axisMin[i] = axisMin[i] - step[i];\r\n      }\r\n    }\r\n  }\r\n  return [axisMin[0], axisMax[0], axisMin[1], axisMax[1]];\r\n}\r\n\r\nfunction calcUnitPx(xAxisMin, xAxisMax, canvasWidth, yAxisMin, yAxisMax, canvasHeight, margin) {\r\n  var xUnitPx = (canvasWidth - 2 * margin) / (xAxisMax - xAxisMin),\r\n    yUnitPx = (canvasHeight - 2 * margin) / (yAxisMax - yAxisMin);\r\n\r\n  return [xUnitPx, yUnitPx];\r\n}\r\n\r\nfunction xDataToCanvas(value, margin, unitPx) {\r\n  return margin + Math.floor(value * unitPx);\r\n}\r\n\r\nfunction yDataToCanvas(value, margin, unitPx, canvasHeight) {\r\n  return canvasHeight - margin - Math.floor(value * unitPx);\r\n}\r\n\r\nfunction drawAxis(context, type, margin, xAxisMin, xAxisMax, canvasWidth, xUnitPx, xTitle, yAxisMin, yAxisMax, canvasHeight, yUnitPx, yTitle) {\r\n  context.font = '10px Arial';\r\n  context.strokeStyle = 'black';\r\n  context.lineWidth = 1;\r\n  var yAxisPosition,\r\n    xAxisPosition,\r\n    yTitlePosition,\r\n    xTitlePosition,\r\n    yTitleSide,\r\n    xTitleSide;\r\n\r\n  //determine yAxis position\r\n  if (xAxisMin <= 0 && xAxisMax >= 0) { yAxisPosition = 0; }\r\n  else {\r\n    if (xAxisMin > 0) { yAxisPosition = xAxisMin; }\r\n    else { yAxisPosition = xAxisMax; }\r\n  }\r\n\r\n  //draw y Axis\r\n  context.beginPath(); // prevents weird behavior with IE9\r\n  context.moveTo(Math.floor((yAxisPosition - xAxisMin) * xUnitPx) + margin, canvasHeight - margin);\r\n  context.lineTo(Math.floor((yAxisPosition - xAxisMin) * xUnitPx) + margin, margin);\r\n\r\n  //determine x title position and y title's side\r\n  if (xAxisMax - yAxisPosition >= yAxisPosition - xAxisMin) { xTitlePosition = (xAxisMax + yAxisPosition) / 2; yTitleSide = -30; }\r\n  else { xTitlePosition = (yAxisPosition + xAxisMin) / 2; yTitleSide = +30; }\r\n  //alert(xTitlePosition);\r\n\r\n  //determine xAxis position\r\n  if (yAxisMin <= 0 && yAxisMax >= 0 && type == 'linearScale') { xAxisPosition = 0; }\r\n  else {\r\n    if (yAxisMin > 0 || type == 'logScale') { xAxisPosition = yAxisMin; }\r\n    else { xAxisPosition = yAxisMax; }\r\n  }\r\n\r\n  //draw x Axis\r\n\r\n  context.moveTo(margin, canvasHeight - margin - Math.floor((xAxisPosition - yAxisMin) * yUnitPx));\r\n  context.lineTo(canvasWidth - margin, canvasHeight - margin - Math.floor((xAxisPosition - yAxisMin) * yUnitPx));\r\n\r\n  //determine y title position and x title's side\r\n  if (yAxisMax - xAxisPosition >= xAxisPosition - yAxisMin) { yTitlePosition = (yAxisMax + xAxisPosition) / 2; xTitleSide = 25; }\r\n  else { yTitlePosition = (xAxisPosition + yAxisMin) / 2; xTitleSide = -25; }\r\n\r\n  //write x title\r\n  context.textAlign = 'center';\r\n  if (xTitleSide > 0) { context.textBaseline = 'top'; }\r\n  else { context.textBaseline = 'bottom'; }\r\n  context.fillText(xTitle, margin + Math.floor((xTitlePosition - xAxisMin) * xUnitPx), canvasHeight - margin - Math.floor((xAxisPosition - yAxisMin) * yUnitPx) + xTitleSide);\r\n\r\n  //write y title\r\n  context.rotate(-Math.PI / 2); //rotate the whole canvas to write y title vertically\r\n  context.textAlign = 'center';\r\n  if (yTitleSide > 0) { context.textBaseline = 'top'; }\r\n  else { context.textBaseline = 'bottom'; }\r\n\r\n  var x = margin + Math.floor((yAxisPosition - xAxisMin) * xUnitPx) + yTitleSide,\r\n    y = canvasHeight - margin - Math.floor((yTitlePosition - yAxisMin) * yUnitPx);\r\n  context.fillText(yTitle, -y, x);\r\n  context.rotate(Math.PI / 2);\r\n\r\n\r\n  return [xAxisPosition, xTitleSide, yAxisPosition, yTitleSide];\r\n}\r\n\r\nfunction drawTicks(context, type, margin, xAxisMin, xAxisMax, xStep, canvasWidth, xUnitPx, xAxisPosition, xTicksSide, yAxisMin, yAxisMax, yStep, canvasHeight, yUnitPx, yAxisPosition, yTicksSide) {\r\n  var xPx,\r\n    yPx,\r\n    tickLabel;\r\n\r\n  //x Axis\r\n  context.textAlign = 'center';\r\n  if (xTicksSide > 0) { context.textBaseline = 'top'; }\r\n  else { context.textBaseline = 'bottom'; }\r\n\r\n  //major ticks\r\n  for (var x = xAxisMin; x <= xAxisMax; x += xStep) {\r\n    xPx = margin + Math.floor((x - xAxisMin) * xUnitPx);\r\n    yPx = canvasHeight - margin - Math.floor((xAxisPosition - yAxisMin) * yUnitPx);\r\n    context.moveTo(xPx, yPx);\r\n    context.lineTo(xPx, yPx + 2 * xTicksSide);\r\n\r\n    if (x == xAxisPosition && xAxisPosition != yAxisMin && xAxisPosition != yAxisMax) {\r\n      xPx = xPx - 10 * yTicksSide;\r\n    } //avoids the messy zero labels at the axes' intersections\r\n    tickLabel = changePrecision(7, x);\r\n    context.fillText(tickLabel, xPx, yPx + 5 * xTicksSide); //tick label\r\n  }\r\n\r\n  //minor ticks\r\n  for (var x = xAxisMin; x < xAxisMax; x += xStep / 2) {\r\n    xPx = margin + Math.floor((x - xAxisMin) * xUnitPx);\r\n    yPx = canvasHeight - margin - Math.floor((xAxisPosition - yAxisMin) * yUnitPx);\r\n    context.moveTo(xPx, yPx);\r\n    context.lineTo(xPx, yPx + 1 * xTicksSide);\r\n  }\r\n\r\n  //y Axis\r\n  context.textBaseline = 'middle';\r\n  if (yTicksSide > 0) { context.textAlign = 'left'; }\r\n  else { context.textAlign = 'right'; }\r\n  //major ticks\r\n  for (var y = yAxisMin; y <= yAxisMax; y += yStep) {\r\n    yPx = canvasHeight - margin - Math.floor((y - yAxisMin) * yUnitPx);\r\n    xPx = margin + Math.floor((yAxisPosition - xAxisMin) * xUnitPx);\r\n    context.moveTo(xPx, yPx);\r\n    context.lineTo(xPx + 2 * yTicksSide, yPx);\r\n\r\n    if (type == 'logScale' && y < yAxisMax) {\r\n      for (var j = 1; j <= 10; j++) {\r\n        var yMinor = Math.floor(yPx - yStep * yUnitPx * log10(j / 10) - yStep * yUnitPx) + 0.5;\r\n\r\n        context.moveTo(xPx, yMinor);\r\n        context.lineTo(xPx + 1 * yTicksSide, yMinor);\r\n      }\r\n    }\r\n    tickLabel = changePrecision(7, y);\r\n    if (type == 'logScale') {\r\n      tickLabel = '1E' + y;\r\n    }\r\n    if (y == xAxisPosition && yAxisPosition != xAxisMin && yAxisPosition != xAxisMax) {\r\n      yPx = yPx - 10 * xTicksSide;\r\n    } //avoids the messy labels at the axes' intersections\r\n    context.fillText(tickLabel, xPx + 5 * yTicksSide, yPx); //tick label\r\n  }\r\n  //minor ticks\r\n  if (type == 'linearScale') {\r\n    for (var y = yAxisMin; y < yAxisMax; y += yStep / 2) {\r\n\r\n      yPx = canvasHeight - margin - Math.floor((y - yAxisMin) * yUnitPx);\r\n      xPx = margin + Math.floor((yAxisPosition - xAxisMin) * xUnitPx);\r\n\r\n      context.moveTo(xPx, yPx);\r\n      context.lineTo(xPx + 1 * yTicksSide, yPx);\r\n    }\r\n  }\r\n  context.stroke();\r\n}\r\n\r\nfunction legend(context, type, arrayMult, plotStyle, margin, xAxisMin, xUnitPx, yAxisMin, yUnitPx, canvasHeight) {\r\n  context.textBaseline = 'middle';\r\n  context.textAlign = 'left';\r\n  var x, y, xPx, yPx = '+Infinity', index, xy, array = [];\r\n  for (var i = 0; i < arrayMult.length; i++) {\r\n    array = arrayMult[i];\r\n    index = array.length - 1;//last point\r\n    xy = array[index];\r\n    x = xy[0];\r\n    y = xy[1];\r\n\r\n    xPx = 10 + margin + Math.floor((x - xAxisMin) * xUnitPx);\r\n    if (type == 'logScale') { y = log10(Math.abs(y)); }\r\n    if (isFinite(y)) {\r\n      yPx = canvasHeight - margin - Math.floor((y - yAxisMin) * yUnitPx);\r\n      context.fillStyle = plotStyle[i][1]; //color\r\n      context.fillText(plotStyle[i][2], xPx, yPx);\r\n    }\r\n  }\r\n}\r\n\r\nfunction plot(array, context, type, plotStyle, margin, xAxisMin, xAxisMax, canvasWidth, xUnitPx, yAxisMin, yAxisMax, canvasHeight, yUnitPx, yAxisPosition) {\r\n  var xPx, yPx, y, j = 0;\r\n  context.strokeStyle = plotStyle[1];\r\n  for (var i = 0; i < array.length; i++) { //one loop for each data point\r\n    xPx = margin + Math.floor((array[i][0] - xAxisMin) * xUnitPx);\r\n    y = (array[i][1]);\r\n    if (type == 'logScale') {\r\n      y = log10(Math.abs(y));\r\n    }\r\n    if (y != '-Infinity') {//y = '-Infinity' when y = 0 and scale is Log\r\n      yPx = canvasHeight - margin - Math.floor((y - yAxisMin) * yUnitPx);\r\n      switch (plotStyle[0]) {\r\n        case 'line': {\r\n          if (j == 0) { // j==0 <=> 1st plotted point, not necessarily 1st point in the array \r\n            context.beginPath();\r\n            context.moveTo(xPx, yPx);\r\n          }\r\n          context.lineTo(xPx, yPx);\r\n          break;\r\n        }\r\n        case 'circles': {\r\n          context.beginPath();\r\n          context.arc(xPx, yPx, 3, 0, 2 * Math.PI);\r\n          context.stroke();\r\n          break;\r\n        }\r\n        case 'diagonalCross': {\r\n          context.beginPath();\r\n          context.moveTo(xPx - 2, yPx - 2);\r\n          context.lineTo(xPx + 2, yPx + 2);\r\n          context.moveTo(xPx + 2, yPx - 2);\r\n          context.lineTo(xPx - 2, yPx + 2);\r\n          context.stroke();\r\n          break;\r\n        }\r\n        case 'verticalCross': {\r\n          context.beginPath();\r\n          context.moveTo(xPx, yPx - 2);\r\n          context.lineTo(xPx, yPx + 2);\r\n          context.moveTo(xPx + 2, yPx);\r\n          context.lineTo(xPx - 2, yPx);\r\n          context.stroke();\r\n          break;\r\n        }\r\n      }\r\n      j++;\r\n    }\r\n  }\r\n  if (plotStyle[0] == 'line') { context.stroke(); }\r\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(5)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"/*\\r\\n * Base structure\\r\\n */\\r\\n\\r\\n/* Move down content because we have a fixed navbar that is 50px tall */\\r\\nbody {\\r\\n  padding-top: 60px;\\r\\n}\\r\\n\\r\\n.navbar-brand {\\r\\n  font-size: 36px;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Global add-ons\\r\\n */\\r\\n\\r\\n.sub-header {\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px solid #eee;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Top navigation\\r\\n * Hide default border to remove 1px line.\\r\\n */\\r\\n.navbar-fixed-top {\\r\\n  border: 0;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Sidebar\\r\\n */\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  .sidebar {\\r\\n    position: fixed;\\r\\n    top: 60px;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    z-index: 1000;\\r\\n    display: block;\\r\\n    padding: 20px;\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */\\r\\n    background-color: #f5f5f5;\\r\\n    border-right: 1px solid #eee;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Sidebar navigation */\\r\\n.nav-sidebar {\\r\\n  margin-right: -21px; /* 20px padding + 1px border */\\r\\n  margin-bottom: 20px;\\r\\n  margin-left: -20px;\\r\\n}\\r\\n.nav-sidebar > li > a {\\r\\n  padding-right: 20px;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n.nav-sidebar > .active > a,\\r\\n.nav-sidebar > .active > a:hover,\\r\\n.nav-sidebar > .active > a:focus {\\r\\n  color: #fff;\\r\\n  background-color: #428bca;\\r\\n}\\r\\n\\r\\n\\r\\n/*\\r\\n * Main content\\r\\n */\\r\\n\\r\\n.main {\\r\\n  padding: 20px;\\r\\n}\\r\\n@media (min-width: 768px) {\\r\\n  .main {\\r\\n    padding-right: 40px;\\r\\n    padding-left: 40px;\\r\\n  }\\r\\n}\\r\\n.main .page-header {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n/* fa icons */\\r\\n.fa-toggle-on, .fa-toggle-off {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.fa-toggle-on {\\r\\n  /*color: #f1f1f1;*/\\r\\n  color: #dddddd;\\r\\n  color: #8ce196;\\r\\n}\\r\\n\\r\\n.fa-toggle-off {\\r\\n  color: #dddddd;\\r\\n}\\r\\n\\r\\nbutton.play > span#pause {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nbutton.pause > span#play {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ndiv.input-group#ds {\\r\\n  width: 60%;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.panel.nofile:after {\\r\\n  content: \\\" \\\";\\r\\n  z-index: 10;\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  height: 100%;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  background: rgba(255, 255, 255, 0.5);\\r\\n  border-radius: 4px;\\r\\n}\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC5jc3M/NGNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHVuZGVmaW5lZCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKlxcclxcbiAqIEJhc2Ugc3RydWN0dXJlXFxyXFxuICovXFxyXFxuXFxyXFxuLyogTW92ZSBkb3duIGNvbnRlbnQgYmVjYXVzZSB3ZSBoYXZlIGEgZml4ZWQgbmF2YmFyIHRoYXQgaXMgNTBweCB0YWxsICovXFxyXFxuYm9keSB7XFxyXFxuICBwYWRkaW5nLXRvcDogNjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLm5hdmJhci1icmFuZCB7XFxyXFxuICBmb250LXNpemU6IDM2cHg7XFxyXFxufVxcclxcblxcclxcbi8qXFxyXFxuICogR2xvYmFsIGFkZC1vbnNcXHJcXG4gKi9cXHJcXG5cXHJcXG4uc3ViLWhlYWRlciB7XFxyXFxuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xcclxcbn1cXHJcXG5cXHJcXG4vKlxcclxcbiAqIFRvcCBuYXZpZ2F0aW9uXFxyXFxuICogSGlkZSBkZWZhdWx0IGJvcmRlciB0byByZW1vdmUgMXB4IGxpbmUuXFxyXFxuICovXFxyXFxuLm5hdmJhci1maXhlZC10b3Age1xcclxcbiAgYm9yZGVyOiAwO1xcclxcbiAgaGVpZ2h0OiA2MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4vKlxcclxcbiAqIFNpZGViYXJcXHJcXG4gKi9cXHJcXG5cXHJcXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcXHJcXG4gIC5zaWRlYmFyIHtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDYwcHg7XFxyXFxuICAgIGJvdHRvbTogMDtcXHJcXG4gICAgbGVmdDogMDtcXHJcXG4gICAgei1pbmRleDogMTAwMDtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7XFxyXFxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcXHJcXG4gICAgb3ZlcmZsb3cteTogYXV0bzsgLyogU2Nyb2xsYWJsZSBjb250ZW50cyBpZiB2aWV3cG9ydCBpcyBzaG9ydGVyIHRoYW4gY29udGVudC4gKi9cXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcXHJcXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2VlZTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLyogU2lkZWJhciBuYXZpZ2F0aW9uICovXFxyXFxuLm5hdi1zaWRlYmFyIHtcXHJcXG4gIG1hcmdpbi1yaWdodDogLTIxcHg7IC8qIDIwcHggcGFkZGluZyArIDFweCBib3JkZXIgKi9cXHJcXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XFxyXFxuICBtYXJnaW4tbGVmdDogLTIwcHg7XFxyXFxufVxcclxcbi5uYXYtc2lkZWJhciA+IGxpID4gYSB7XFxyXFxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xcclxcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcclxcbn1cXHJcXG4ubmF2LXNpZGViYXIgPiAuYWN0aXZlID4gYSxcXHJcXG4ubmF2LXNpZGViYXIgPiAuYWN0aXZlID4gYTpob3ZlcixcXHJcXG4ubmF2LXNpZGViYXIgPiAuYWN0aXZlID4gYTpmb2N1cyB7XFxyXFxuICBjb2xvcjogI2ZmZjtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MjhiY2E7XFxyXFxufVxcclxcblxcclxcblxcclxcbi8qXFxyXFxuICogTWFpbiBjb250ZW50XFxyXFxuICovXFxyXFxuXFxyXFxuLm1haW4ge1xcclxcbiAgcGFkZGluZzogMjBweDtcXHJcXG59XFxyXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxyXFxuICAubWFpbiB7XFxyXFxuICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XFxyXFxuICAgIHBhZGRpbmctbGVmdDogNDBweDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuLm1haW4gLnBhZ2UtaGVhZGVyIHtcXHJcXG4gIG1hcmdpbi10b3A6IDA7XFxyXFxufVxcclxcblxcclxcbi8qIGZhIGljb25zICovXFxyXFxuLmZhLXRvZ2dsZS1vbiwgLmZhLXRvZ2dsZS1vZmYge1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uZmEtdG9nZ2xlLW9uIHtcXHJcXG4gIC8qY29sb3I6ICNmMWYxZjE7Ki9cXHJcXG4gIGNvbG9yOiAjZGRkZGRkO1xcclxcbiAgY29sb3I6ICM4Y2UxOTY7XFxyXFxufVxcclxcblxcclxcbi5mYS10b2dnbGUtb2ZmIHtcXHJcXG4gIGNvbG9yOiAjZGRkZGRkO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24ucGxheSA+IHNwYW4jcGF1c2Uge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uLnBhdXNlID4gc3BhbiNwbGF5IHtcXHJcXG4gIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbmRpdi5pbnB1dC1ncm91cCNkcyB7XFxyXFxuICB3aWR0aDogNjAlO1xcclxcbn1cXHJcXG5cXHJcXG4ucGFuZWwge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbn1cXHJcXG5cXHJcXG4ucGFuZWwubm9maWxlOmFmdGVyIHtcXHJcXG4gIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXHJcXG4gIHotaW5kZXg6IDEwO1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxuICB0b3A6IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XFxyXFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxyXFxufVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jc3MtbG9hZGVyIS4vc3JjL2luZGV4LmNzc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/ZGEwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\t// Test for IE <= 9 as proposed by Browserhacks\n\t\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t\t// Tests for existence of standard globals is to allow style-loader \n\t\t// to operate correctly into non-standard environments\n\t\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\t\treturn window && document && document.all && !window.atob;\n\t}),\n\tgetElement = (function(fn) {\n\t\tvar memo = {};\n\t\treturn function(selector) {\n\t\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t\t}\n\t\t\treturn memo[selector]\n\t\t};\n\t})(function (styleTarget) {\n\t\treturn document.querySelector(styleTarget)\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = __webpack_require__(7);\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (typeof options.insertInto === \"undefined\") options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar styleTarget = getElement(options.insertInto)\n\tif (!styleTarget) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\tstyleTarget.insertBefore(styleElement, styleTarget.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\tstyleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\tstyleTarget.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\tstyleTarget.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove, transformResult;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    transformResult = options.transform(obj.css);\n\t    \n\t    if (transformResult) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = transformResult;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css. \n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3R5bGUtbG9hZGVyL2ZpeFVybHMuanM/NGUyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9zdHlsZS1sb2FkZXIvZml4VXJscy5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bobGraph__ = __webpack_require__(3);\n\r\n\r\n__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(0);\r\n\r\n// Immediately Invoked Function Expression\r\n(function () {\r\n  'use strict';\r\n\r\n  const mchEps = machineEpsilon();\r\n\r\n  // Elementary charge and Boltzmann constant\r\n  const q = 1.60217653E-19,\r\n    k = 1.3806488E-23;\r\n\r\n  let arrayCalc,\r\n    fileOpened = false,\r\n    plotStyle = [],\r\n    userData = {\r\n      estimatedParameters: {\r\n        Rp: undefined\r\n      },\r\n      current: {\r\n        shunt: undefined,\r\n        nonLinear: undefined,\r\n        noIrpNoSCLCarray: undefined\r\n      },\r\n      dataArray: [],\r\n      modifDataArray: []\r\n    },\r\n    parameters = {\r\n      minVolt: undefined,\r\n      maxVolt: undefined,\r\n      stepVolt: undefined,\r\n      iph: undefined,\r\n      t: undefined,\r\n      n1: undefined,\r\n      n2: undefined,\r\n      is1: undefined,\r\n      is2: undefined,\r\n      rp1: undefined,\r\n      rp2: undefined,\r\n      rs: undefined,\r\n      // Methods:\r\n      init: initParameters,\r\n      update: updateParameter\r\n    },\r\n    model = {};\r\n\r\n  function initParameters() {\r\n    // Used as a method by parameter object\r\n    for (let property in this) {\r\n      const isDataProperty = typeof this[property] !== 'function';\r\n      if (isDataProperty) {\r\n        const $inputNumber = $('[type=number].' + property),\r\n          $inputCheckBox = $('[type=checkbox].' + property);\r\n        this[property] = {\r\n          value: parseFloat($inputNumber.val()),\r\n          checked: $inputCheckBox.is(':checked')\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateParameter($element) {\r\n    // Used as a method by parameter object\r\n    for (let property in this) {\r\n      if ($element.hasClass(property)) {\r\n        const elementValue = parseFloat($element.val()),\r\n          inputIsLogRange = $element.hasClass('logscale') && $element.attr('type') === 'range',\r\n          newValue = (inputIsLogRange) ? Math.pow(10, elementValue) : elementValue;\r\n        this[property] = {\r\n          value: newValue,\r\n          checked: $element.is(':checked')\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  function machineEpsilon() {\r\n    // Calculate Machine Epsilon\r\n    let temp1, temp2;\r\n    temp1 = 1.0;\r\n    do {\r\n      temp1 /= 2;\r\n      temp2 = 1.0 + temp1;\r\n    } while (temp2 > 1.0);\r\n    return temp1;\r\n  }\r\n\r\n  $(function () {\r\n    // When page is loaded\r\n\r\n    $('input[type=radio].default')\r\n      .attr('checked', true);\r\n\r\n    clearFileInput();\r\n\r\n    parameters.init();\r\n\r\n    model = getModel();\r\n\r\n    // Calculate a first time\r\n    // IV using the initial parameters\r\n    calcIVandPlot();\r\n\r\n    bindEvents();\r\n  });\r\n\r\n  function bindEvents() {\r\n    $('input[type=range].syncme')\r\n      .on('input', inputEvent)\r\n      .mouseup(rangeInputMouseUp);\r\n\r\n    $('input[type=number].syncme')\r\n      .change(inputEvent)\r\n      .keydown(numberInputKeyDown)\r\n      .blur(changeStep);\r\n\r\n    $('input[type=number].voltage')\r\n      .change(voltageInputChanged);\r\n\r\n    $('input[type=radio].model')\r\n      .change(modelChanged);\r\n\r\n    $('input[type=radio].scale')\r\n      .change(changeScaleType);\r\n\r\n    $(':file')\r\n      .change(fileInputChanged);\r\n\r\n    $('.fa-toggle-on, .fa-toggle-off')\r\n      .click(faToggleClicked);\r\n\r\n    $('#useestimatedparams')\r\n      .click(useEstimatedParams);\r\n\r\n    $('button#start')\r\n      .click(startButtonClicked);\r\n\r\n    $('input#clear')\r\n      .click(clearData);\r\n\r\n    $('[type=checkbox]')\r\n      .change(parameterCheckBoxChanged);\r\n  }\r\n\r\n  function changeScaleType() {\r\n    // Event handler\r\n    // fired when user clicks on a scale type radio button\r\n    calcIVandPlot();\r\n  }\r\n\r\n  function rangeInputMouseUp() {\r\n    // Event handler\r\n    adjustRange(this);\r\n  }\r\n\r\n  function numberInputKeyDown(event) {\r\n    const keyCode = event.which,\r\n      upOrDownArrowKeyDown = keyCode == 38 || keyCode == 40;\r\n\r\n    if (upOrDownArrowKeyDown) {\r\n      syncInputs(this);\r\n      adjustRange(this);\r\n      calcIVandPlot();\r\n    }\r\n  }\r\n\r\n  function calcIVandPlot() {\r\n    const ivResult = calcIV(parameters, getModel());\r\n\r\n    arrayCalc = ivResult.arrayCalc;\r\n    plotStyle = ivResult.plotStyle;\r\n\r\n    // and plot the result\r\n    combDataAndCalc();\r\n  }\r\n\r\n  function fileInputChanged() {\r\n    // Fired when user selects a new file\r\n    // to import\r\n    const file = this.files[0];\r\n    $(this)\r\n      .closest('.input-group')\r\n      .children('input:text')\r\n      .val(file.name);\r\n    processFiles(file);\r\n  }\r\n\r\n  function faToggleClicked() {\r\n    // Fired when user clicks on any of the font-awesome toggle icons\r\n    // As of now there are 2 of these icons on the page\r\n    const iElem = this; // <i> element\r\n\r\n    $(iElem)\r\n      .toggleClass('fa-toggle-on fa-toggle-off');\r\n\r\n    if (iElem.id === 'hideIrp') {\r\n      userData.modifDataArray = toggleIrp(userData.modifDataArray, userData.current.shunt, IprShowed());\r\n      combDataAndCalc();\r\n    }\r\n\r\n    if (iElem.id === 'hideNonLinCurr') {\r\n      const toggleResult = toggleNonLinCurr(userData, userData.modifDataArray, nonLinearCurrentShowed());\r\n      userData.dataArray = toggleResult.dataArray;\r\n      userData.modifDataArray = toggleResult.modifDataArray;\r\n      combDataAndCalc();\r\n    }\r\n  }\r\n\r\n  function parameterCheckBoxChanged() {\r\n    /* Fired when user clicks on any of the checkbox inputs\r\n    These checkboxes define whether the corresponding diode\r\n    parameter varies or not during optimization\r\n    Therefore, if unchecked, the parameter will not be estimated. */\r\n    findAndEstimateDiodes();\r\n  }\r\n\r\n  function syncInputs(sourceElem) {\r\n    // Sync range and number inputs\r\n\r\n    const $sourceInput = $(sourceElem),\r\n      isSourceRange = $sourceInput.attr('type') === 'range',\r\n      targetType = (isSourceRange) ? 'number' : 'range',\r\n      sourceValue = $sourceInput.val();\r\n\r\n    // Sync companion input\r\n    const $targetInput = $sourceInput\r\n      .closest('.row')\r\n      .find('input.syncme[type=' + targetType + ']'),\r\n      isScaleLog = $targetInput.hasClass('logscale');\r\n\r\n    if (isScaleLog) {\r\n      const targetValue = (isSourceRange) ? Math.pow(10, sourceValue).toExponential(2) : log10(sourceValue);\r\n      $targetInput.val(targetValue);\r\n    } else {\r\n      // Linear scale\r\n      $targetInput.val(sourceValue);\r\n    }\r\n  }\r\n\r\n  function syncAllInputs() {\r\n    $('input[type=number].syncme')\r\n      .each(function (index, element) {\r\n        syncInputs(element);\r\n      });\r\n  }\r\n\r\n  function inputEvent() {\r\n    // Event handler\r\n    // fired when user moves range input or change number input.\r\n    // So \"this\" is a number or range input element\r\n\r\n    const isNumberInput = $(this).attr('type') === 'number';\r\n\r\n    if (isNumberInput) {\r\n      adjustRange(this);\r\n    }\r\n\r\n    syncInputs(this);\r\n\r\n    parameters.update($(this));\r\n\r\n    calcIVandPlot();\r\n  }\r\n\r\n  function voltageInputChanged() {\r\n    // Fired when one of the 3 .voltage inputs is changed by user\r\n\r\n    parameters\r\n      .update($(this));\r\n\r\n    checkVoltageInputs();\r\n\r\n    calcIVandPlot();\r\n  }\r\n\r\n  function checkVoltageInputs() {\r\n    const minVolt = parameters.minVolt.value,\r\n      maxVolt = parameters.maxVolt.value,\r\n      stepVolt = parameters.stepVolt.value;\r\n\r\n    // Make sure maxVolt > minVolt\r\n    if (maxVolt < minVolt) {\r\n      document.getElementById('minVolt').value = maxVolt;\r\n      document.getElementById('maxVolt').value = minVolt;\r\n    }\r\n\r\n    // Make sure stepVolt != 0\r\n    if (stepVolt == 0) {\r\n      document.getElementById('stepVolt').value = 25;\r\n    }\r\n\r\n    // Make sure stepVolt > 0\r\n    if (stepVolt < 0) {\r\n      document.getElementById('stepVolt').value = Math.abs(stepVolt);\r\n    }\r\n  }\r\n\r\n  function log10(val) {\r\n    // Returns base 10 logarithmic\r\n    // (Math.log10() method is not supported by IE11)\r\n    // Can stop using this function with a transpiler\r\n    return Math.log(val) / Math.log(10);\r\n  }\r\n\r\n  function remDecimals(model, number) {\r\n    // Change a number's precision\r\n    const nbDecimals = nbAfterDot(model);\r\n    return Math.round(number * Math.pow(10, nbDecimals)) * Math.pow(10, -nbDecimals);\r\n  }\r\n\r\n  function nbAfterDot(number) {\r\n    // Return the number of digits\r\n    // after decimal separator\r\n    const n = number.toString().indexOf('.');\r\n    if (n == -1) {\r\n      return 0;\r\n    }\r\n    else {\r\n      let i = 0;\r\n      while (number.charAt(n + 1 + i) != '' && isFinite(number.charAt(n + 1 + i))) {\r\n        i++;\r\n      }\r\n      return i;\r\n    }\r\n  }\r\n\r\n  function getRowDiv($input) {\r\n    // Get parameter inputs'\r\n    // closest common ancestor\r\n    return $input\r\n      .closest('.row');\r\n  }\r\n\r\n  function adjustRange(element) {\r\n    // When value reaches input's range limit,\r\n    // modifies range so user is able to use it again\r\n\r\n    const $input = $(element),\r\n      inputType = $input.attr('type'),\r\n      $rowDiv = getRowDiv($input);\r\n\r\n    let $rangeInput = $input,\r\n      rangeInputElem = element,\r\n      $numberInput = $rowDiv\r\n        .find('[type=number]'),\r\n      numberInputElem = $numberInput.get(0);\r\n\r\n    if (inputType === 'number') {\r\n      $rangeInput = $rowDiv\r\n        .find('[type=range]');\r\n      rangeInputElem = $rangeInput.get(0);\r\n      $numberInput = $input;\r\n      numberInputElem = element;\r\n    }\r\n\r\n    let rangeChanged = false;\r\n\r\n    const rangeMax = parseFloat(rangeInputElem.max),\r\n      rangeMin = parseFloat(rangeInputElem.min),\r\n      numberValue = parseFloat(numberInputElem.value);\r\n\r\n    if ($rangeInput.hasClass('linearscale')) {\r\n      if (numberValue >= rangeMax) {\r\n        rangeInputElem.max = remDecimals(numberValue, 1.6 * numberValue);\r\n        rangeInputElem.value = numberValue;\r\n        rangeInputElem.min = remDecimals(numberValue, 0.4 * numberValue);\r\n        rangeChanged = true;\r\n      } else {\r\n        if (numberValue <= rangeMin) {\r\n          rangeInputElem.min = remDecimals(numberInputElem.value, 0.4 * numberInputElem.value);\r\n          rangeInputElem.value = numberInputElem.value;\r\n          rangeInputElem.max = remDecimals(numberInputElem.value, 1.6 * numberInputElem.value);\r\n          rangeChanged = true;\r\n        }\r\n      }\r\n      while (2 * rangeInputElem.step >= (rangeInputElem.max - rangeInputElem.min)) {\r\n        rangeInputElem.max = 2 * rangeInputElem.step + rangeInputElem.max;\r\n      }\r\n    } else {\r\n      // When scale is Log\r\n      if (numberValue >= Math.pow(10, rangeMax)) {\r\n        rangeInputElem.max = Math.round(log10(numberValue) + 3);\r\n        rangeInputElem.value = numberValue;\r\n        rangeInputElem.min = Math.round(log10(numberValue) - 3);\r\n        rangeChanged = true;\r\n      } else {\r\n        if (numberValue <= Math.pow(10, rangeMin)) {\r\n          rangeInputElem.min = Math.round(log10(numberValue) - 3);\r\n          rangeInputElem.value = numberValue;\r\n          rangeInputElem.max = Math.round(log10(numberValue) + 3);\r\n          rangeChanged = true;\r\n        }\r\n      }\r\n    }\r\n    return rangeChanged;\r\n  }\r\n\r\n  function changeStep() {\r\n    // Event handle fired when\r\n    // user blurs number input\r\n    let numberInputElem = this,\r\n      $rangeInput = getRowDiv($(numberInputElem))\r\n        .find('[type=range]'),\r\n      value = numberInputElem.value;\r\n\r\n    if ($rangeInput.hasClass('linearscale')) {\r\n      numberInputElem.value = parseFloat(value); // For Chrome\r\n      var newStep = Math.pow(10, -1 * nbAfterDot(value));\r\n\r\n      numberInputElem.step = newStep;\r\n    }\r\n\r\n    $rangeInput.get().step = newStep;\r\n  }\r\n\r\n  function modelChanged() {\r\n    // Fired when user changes number of diodes or the equivalent circuit\r\n\r\n    // Update model variable\r\n    model = getModel();\r\n\r\n    changeInputStatusBasedOnModel();\r\n\r\n    calcIVandPlot();\r\n\r\n    if (fileOpened) {\r\n      findAndEstimateDiodes();\r\n\r\n      calcSqResSum(parameters, userData.dataArray, arrayCalc);\r\n    }\r\n  }\r\n\r\n  function changeInputStatusBasedOnModel() {\r\n    if (model.circuit === 'parallel') {\r\n      $('input.rp2')\r\n        .prop('disabled', true);\r\n\r\n      const $inputs = $('input.n2, input.is2, #series, #parallel');\r\n\r\n      if (!fileOpened) {\r\n        $inputs\r\n          .not('[type=checkbox]');\r\n      }\r\n\r\n      $inputs\r\n        .prop('disabled', false);\r\n\r\n      document.getElementById('start').disabled = false;\r\n    }\r\n\r\n    if (model.diodeCount === 1) {\r\n      document.getElementById('series').checked = false;\r\n      document.getElementById('parallel').checked = true;\r\n\r\n      model.circuit = 'parallel';\r\n\r\n      $('input.n2, input.is2, #series, #parallel, input.rp2')\r\n        .prop('disabled', true);\r\n\r\n      if (fileOpened) {\r\n        // Will also enable checkboxes\r\n        $('input.n1, input.is1, input.rp1')\r\n          .prop('disabled', false);\r\n      }\r\n\r\n      document.getElementById('start').disabled = false;\r\n    }\r\n\r\n    if (model.circuit === 'series') {\r\n      $('input.n2, input.is2, input.rp2')\r\n        .prop('disabled', false);\r\n\r\n      // Disable fitting inputs because\r\n      // series model not supported for optimization\r\n      disableCheckboxes();\r\n      $('button#start')\r\n        .prop('disabled', true);\r\n    }\r\n  }\r\n\r\n  function disableCheckboxes() {\r\n    $('[type=checkbox]')\r\n      .prop('disabled', true);\r\n  }\r\n\r\n  function findAndEstimateDiodes() {\r\n    const findDiodesResult = findDiodes(userData, IprShowed(), nonLinearCurrentShowed()),\r\n      estimatedParams = estimD1D2Rs(getAllParams(), userData, findDiodesResult);\r\n\r\n    displayEstimatedParams(estimatedParams);\r\n  }\r\n\r\n  function displayEstimatedParams(estimatedParams) {\r\n    // Display the result of estimD1D2Rs into\r\n    // the results table\r\n\r\n    for (let paramName in estimatedParams) {\r\n      const id = paramName.toLowerCase(),\r\n        value = estimatedParams[paramName],\r\n        text = (isParamScaleLog(id)) ? value.toExponential(2) : value.toPrecision(2);\r\n\r\n      $('td.estimation#' + id)\r\n        .text(text);\r\n    }\r\n  }\r\n\r\n  function isParamScaleLog(elemID) {\r\n    // Returns whether scale type used for\r\n    // a given diode parameter is a logarithmic one\r\n    return $('[type=number]#' + elemID)\r\n      .hasClass('logscale');\r\n  }\r\n\r\n  function useEstimatedParams() {\r\n    // Fired when user clicks \"Use estimated parameters\" button\r\n    $('td.estimation')\r\n      .each(updateInput);\r\n\r\n    syncAllInputs();\r\n\r\n    parameters.init();\r\n\r\n    calcIVandPlot();\r\n  }\r\n\r\n  function updateInput(index, element) {\r\n    // Update a parameter input with an estimation\r\n\r\n    const $td = $(element),\r\n      paramClass = $td.attr('id'),\r\n      $input = $('input[type=number].' + paramClass);\r\n\r\n    if ($input.prop('disabled') === false) {\r\n      const value = parseFloat($td.text());\r\n      $input.val(value);\r\n    }\r\n  }\r\n\r\n  function startButtonClicked() {\r\n    // Fired when user clicks on the play/pause button\r\n    // to start or pause the fitting\r\n\r\n    const start = $(this)\r\n      .hasClass('play');\r\n\r\n    togglePlayButton();\r\n\r\n    startPauseVary(start);\r\n  }\r\n\r\n  function togglePlayButton() {\r\n    $('#start')\r\n      .toggleClass('play pause');\r\n  }\r\n\r\n  /* The two following functions calculate\r\n     the current at a given voltage */\r\n\r\n  function Iparallel(V, Iph, prevI, T, n1, n2, Is1, Is2, Rp, Rs) {\r\n    // Double diode (in parallel) model\r\n    let i = 0, I, f, df, r, Id1, Id2, Irp;\r\n\r\n    Iph = Iph / 1000; // mA -> A\r\n\r\n    if (!prevI) {\r\n      I = Iph;\r\n      prevI = I;\r\n    }\r\n\r\n    do {\r\n      if (i > 0) {\r\n        prevI = I;\r\n      }\r\n\r\n      Id1 = Is1 * (Math.exp(q * (V + prevI * Rs) / (n1 * k * T)) - 1);\r\n      Id2 = Is2 * (Math.exp(q * (V + prevI * Rs) / (n2 * k * T)) - 1);\r\n      Irp = (V + prevI * Rs) / Rp;\r\n\r\n      // f(V,prevI)\r\n      f = Iph - Id1 - Id2 - Irp - prevI;\r\n\r\n      // df(V,prevI)/dprevI\r\n      df = -((Is1 * Rs) / (n1 * T * k / q)) * Math.exp((V + prevI * Rs) / (n1 * T * k / q))\r\n        - ((Is2 * Rs) / (n2 * T * k / q)) * Math.exp((V + prevI * Rs) / (n2 * T * k / q))\r\n        - Rs / Rp - 1;\r\n\r\n      // f/df\r\n      r = f / df;\r\n\r\n      I = prevI - r;\r\n\r\n      i++;\r\n\r\n    } while (Math.abs(I - prevI) > mchEps && i < 500);\r\n\r\n    return [I, Id1, Id2, Irp, Id1 + Id2 + Irp];\r\n  }\r\n\r\n  function Iseries(V, T, Iph, n1, n2, Is1, Is2, Rp1, Rp2, Rs) {\r\n    // Double diode (in series) model\r\n    let i = 0, Ia, Ib, V1, V2, Id1, Id2, Irp1, Irp2, H = 10, L = -10;\r\n\r\n    do {\r\n      V1 = (H + L) / 2;\r\n\r\n      Id1 = Is1 * Math.exp(q * V1 / (n1 * k * T) - 1);\r\n      Irp1 = V1 / Rp1;\r\n\r\n      Ia = Id1 + Irp1;\r\n\r\n      V2 = V - V1 - Rs * Ia;\r\n\r\n      Id2 = Is2 * Math.exp(q * V2 / (n2 * k * T) - 1);\r\n      Irp2 = V2 / Rp2;\r\n      Ib = Id2 + Irp2;\r\n\r\n      var diffI = Ib - Ia;\r\n\r\n      if (diffI > 0) {\r\n        L = V1;\r\n      } else {\r\n        H = V1;\r\n      }\r\n      i++;\r\n\r\n    } while (Math.abs(diffI) > mchEps && i < 500);\r\n    return [Ia, Id1, Id2, Irp1, Irp2];\r\n  }\r\n\r\n  function getParam$(paramClass) {\r\n    return $('input[type=number]')\r\n      .filter('.' + paramClass);\r\n  }\r\n\r\n  function getParamValue(paramClass) {\r\n    return parseFloat(\r\n      getParam$(paramClass)\r\n        .val()\r\n    );\r\n  }\r\n\r\n  function getParamChecked(paramClass) {\r\n    return $('input[type=checkbox]')\r\n      .filter('.' + paramClass)\r\n      .is(':checked');\r\n  }\r\n\r\n  function getAllParams() {\r\n    let params = {\r\n      value: {\r\n        iph: undefined,\r\n        t: undefined,\r\n        n1: undefined,\r\n        n2: undefined,\r\n        is1: undefined,\r\n        is2: undefined,\r\n        rp1: undefined,\r\n        rp2: undefined,\r\n        rs: undefined\r\n      },\r\n      checked: {\r\n        iph: undefined,\r\n        t: undefined,\r\n        n1: undefined,\r\n        n2: undefined,\r\n        is1: undefined,\r\n        is2: undefined,\r\n        rp1: undefined,\r\n        rp2: undefined,\r\n        rs: undefined\r\n      }\r\n    };\r\n\r\n    for (let paramClass in params.value) {\r\n      params.value[paramClass] = getParamValue(paramClass);\r\n      params.checked[paramClass] = getParamChecked(paramClass);\r\n    }\r\n    return params;\r\n  }\r\n\r\n  function setParamValue(paramClass, value) {\r\n    getParam$(paramClass)\r\n      .val(value);\r\n  }\r\n\r\n  function getModel() {\r\n    const isSingleDiodeChecked = document.getElementById('singleDiode').checked,\r\n      isParallelChecked = document.getElementById('parallel').checked;\r\n    return {\r\n      diodeCount: (isSingleDiodeChecked) ? 1 : 2,\r\n      circuit: (isParallelChecked) ? 'parallel' : 'series'\r\n    };\r\n  }\r\n\r\n  function calcIV(params, model) {\r\n    // Calculates current for a range of voltage values\r\n\r\n    const minVolt = params.minVolt.value,\r\n      maxVolt = params.maxVolt.value,\r\n      stepVolt = params.stepVolt.value,\r\n      Iph = params.iph.value,\r\n      T = params.t.value,\r\n      n1 = params.n1.value,\r\n      Is1 = params.is1.value;\r\n\r\n    let n2 = params.n2.value,\r\n      Is2 = params.is2.value,\r\n      Rp2 = params.rp2.value;\r\n\r\n    if (model.diodeCount === 1) {\r\n      n2 = 1;\r\n      Is2 = 0;\r\n      Rp2;\r\n    }\r\n\r\n    var Rp = params.rp1.value,\r\n      Rs = params.rs.value;\r\n\r\n    let Ipar, Iser, I, Id1, Id2,\r\n      arrayVI = [],\r\n      arrayVId1 = [],\r\n      arrayVId2 = [],\r\n      arrayVIrp1 = [],\r\n      arrayVIrp2 = [],\r\n      parallel, modelCase;\r\n\r\n    if (model.circuit === 'parallel') {\r\n      parallel = true,\r\n        modelCase = 'parallel';\r\n    }\r\n\r\n    if (model.diodeCount === 1) {\r\n      parallel = true,\r\n        modelCase = 'single';\r\n    }\r\n    if (model.circuit === 'series') {\r\n      modelCase = 'series';\r\n    }\r\n\r\n    for (var V = minVolt; V <= maxVolt; V += stepVolt / 1000) {\r\n      if (parallel) {\r\n        Ipar = Iparallel(V, Iph, I, T, n1, n2, Is1, Is2, Rp, Rs);\r\n        I = - Ipar[0];\r\n        Id1 = Ipar[1];\r\n        Id2 = Ipar[2];\r\n        var Irp = Ipar[3];\r\n        arrayVIrp1.push([V, Irp]);\r\n        // Calculated current is used as the initial current for next voltage,\r\n        // speeds up equation solving, is important for high direct bias\r\n      } else {\r\n        Iser = Iseries(V, T, Iph, n1, n2, Is1, Is2, Rp, Rp2, Rs);\r\n        I = Iser[0];\r\n        Id1 = Iser[1];\r\n        Id2 = Iser[2];\r\n        var Irp1 = Iser[3],\r\n          Irp2 = Iser[4];\r\n        arrayVIrp1.push([V, Irp1]);\r\n        arrayVIrp2.push([V, Irp2]);\r\n      }\r\n\r\n      arrayVI.push([V, I]);\r\n      arrayVId1.push([V, Id1]);\r\n      arrayVId2.push([V, Id2]);\r\n    }\r\n\r\n    const modelCases = {\r\n      parallel: {\r\n        arrayCalc: [arrayVI, arrayVId1, arrayVId2, arrayVIrp1],\r\n        plotStyle: [\r\n          ['line', 'black', 'I'],\r\n          ['line', 'orange', 'Id1'],\r\n          ['line', 'orange', 'Id2'],\r\n          ['line', 'purple', 'Irp']\r\n        ]\r\n      },\r\n      single: {\r\n        arrayCalc: [arrayVI, arrayVId1, arrayVIrp1],\r\n        plotStyle: [\r\n          ['line', 'black', 'I'],\r\n          ['line', 'orange', 'Id1'],\r\n          ['line', 'purple', 'Irp']\r\n        ]\r\n      },\r\n      series: {\r\n        arrayCalc: [arrayVI, arrayVId1, arrayVId2, arrayVIrp1, arrayVIrp1],\r\n        plotStyle: [\r\n          ['line', 'black', 'I'],\r\n          ['line', 'orange', 'Id1'],\r\n          ['line', 'orange', 'Id2'],\r\n          ['line', 'purple', 'Irp1'],\r\n          ['line', 'purple', 'Irp2']\r\n        ]\r\n      }\r\n    };\r\n\r\n    return modelCases[modelCase];\r\n  }\r\n\r\n  function scaleType() {\r\n    // Returns the type of scale for y axis\r\n    const scaleIsLinear = document.getElementById('linear').checked;\r\n    return (scaleIsLinear) ? 'linearScale' : 'logScale';\r\n  }\r\n\r\n  function processFiles(file) {\r\n    // Fired when file input changed\r\n\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = readerOnLoad;\r\n    reader.filename = file.name;\r\n\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  function readerOnLoad(event) {\r\n    // Fired when data is ready\r\n\r\n    // Guess T from file name\r\n    let fileName = this.filename;\r\n\r\n    while (isNaN(parseFloat(fileName)) && fileName.length > 0) {\r\n      fileName = fileName.substring(1);\r\n    }\r\n\r\n    fileName = parseFloat(fileName);\r\n\r\n    const defaultT = (isNaN(fileName)) ? 298 : fileName,\r\n      T = prompt('Temperature? (K)', defaultT);\r\n\r\n    if (isFinite(T) && T > 0) {\r\n      setParamValue('t', T);\r\n      // document.getElementById('sliderT').value = T;\r\n      userData.dataArray = [];\r\n      userData.modifDataArray = [];\r\n\r\n      stringToArray(event.target.result);\r\n    }\r\n  }\r\n\r\n  function clearData() {\r\n    // Fired when user clicks on the Clear button\r\n\r\n    userData.dataArray = [];\r\n    userData.modifDataArray = [];\r\n    fileOpened = false;\r\n    combDataAndCalc();\r\n\r\n    $('.panel')\r\n      .addClass('nofile');\r\n\r\n    $('.fa-toggle-on')\r\n      .toggleClass('fa-toggle-on fa-toggle-off');\r\n\r\n    if (window.localFile /* FF is picky about that: not importing the file through classic 'browse' button result in an error here */) {\r\n      window.localFile.reset();\r\n    }\r\n\r\n    clearFileInput();\r\n\r\n    $('.estimation')\r\n      .add('.final')\r\n      .add('#s')\r\n      .add('#ds')\r\n      .empty();\r\n\r\n    if ($('#start').hasClass('pause')) {\r\n      togglePlayButton();\r\n    }\r\n\r\n    userData.estimatedParameters.Rp = undefined;\r\n\r\n    disableCheckboxes();\r\n  }\r\n\r\n  function clearFileInput() {\r\n    $('input[type=file]')\r\n      .val(null)\r\n      .closest('div')\r\n      .children('input[type=text]')\r\n      .val('');\r\n  }\r\n\r\n  function stringToArray(data) {\r\n    // Convert the dataset from a string\r\n    // to an array of arrays of numbers\r\n\r\n    let array = data.split('\\n'),\r\n      skipRow,\r\n      dataArray = [];\r\n\r\n    for (let stringRow of array) {\r\n      skipRow = false;\r\n      const row = stringRow.split('\\t');\r\n\r\n      // Make sure each of the first two\r\n      // elements in the row is a number\r\n      for (let j = 0; j < 2; j++) {\r\n        row[j] = Number(row[j]);\r\n        skipRow += isNaN(row[j]);\r\n      }\r\n\r\n      if (!skipRow) {\r\n        dataArray.push(row);\r\n      }\r\n    }\r\n\r\n    // Removes the semi-transparent\r\n    // overlay div\r\n    $('.panel')\r\n      .removeClass('nofile');\r\n\r\n    fileOpened = true;\r\n\r\n    // Enable checkboxes for the already\r\n    // enabled parameter inputs\r\n    $('[type=range]:enabled')\r\n      .each(enableCheckboxInput);\r\n\r\n    document.getElementById('minVolt').value = dataArray[0][0];\r\n    document.getElementById('maxVolt').value = dataArray[dataArray.length - 1][0] + document.getElementById('stepVolt').value / 1000;\r\n\r\n    dataArray = [dataArray];\r\n\r\n    userData.dataArray = dataArray;\r\n    userData.modifDataArray = dataArray;\r\n\r\n    const ivResult = calcIV(parameters, getModel());\r\n\r\n    /**** Estimate parameters ****/\r\n\r\n    // Parallel resistance Rp\r\n    const Rp = estimRp(dataArray);\r\n    userData.estimatedParameters.Rp = Rp;\r\n\r\n    // Calculate Parallel current and non linear reverse current\r\n    const current = calcIrpAndNonLinRevCurr(dataArray, Rp);\r\n    userData.current.nonLinear = current.nonLinear;\r\n    userData.current.shunt = current.shunt;\r\n\r\n    findAndEstimateDiodes();\r\n\r\n    calcSqResSum(parameters, dataArray, arrayCalc);\r\n\r\n    combDataAndCalc(ivResult);\r\n  }\r\n\r\n  function enableCheckboxInput(index, element) {\r\n    getRowDiv($(element))\r\n      .find('[type=checkbox]')\r\n      .prop('disabled', false);\r\n  }\r\n\r\n  function IprShowed() {\r\n    return $('#hideIrp').hasClass('fa-toggle-off');\r\n  }\r\n\r\n  function nonLinearCurrentShowed() {\r\n    return $('#hideNonLinCurr').hasClass('fa-toggle-off');\r\n  }\r\n\r\n  function combDataAndCalc() {\r\n    // Combine uploaded data and calculated IV into one graph\r\n    const canvasID = 'graph',\r\n      data = userData.modifDataArray.concat(arrayCalc),\r\n      primaryPlotIndex = 0,\r\n      xTitle = 'V (V)',\r\n      yTitle = 'I (A)';\r\n    let style;\r\n\r\n    if (fileOpened) {\r\n      const dataStyle = [['verticalCross', 'purple', 'Data']];\r\n      style = dataStyle.concat(plotStyle);\r\n    } else {\r\n      style = plotStyle;\r\n    }\r\n\r\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_bobGraph__[\"a\" /* default */])(canvasID, data, primaryPlotIndex, style, scaleType(), xTitle, yTitle);\r\n  }\r\n\r\n  function tableSuccessContext(add) {\r\n    // Add or remove \"success\" color on\r\n    // parameter's table's 3rd column\r\n\r\n    const $td = $('td.final');\r\n\r\n    if (add) {\r\n      $td.addClass('success');\r\n    } else {\r\n      $td.removeClass('success');\r\n    }\r\n  }\r\n\r\n  /*\r\n   *  Fit \r\n   */\r\n\r\n\r\n  let interval;\r\n\r\n  function estimRp(dataArray) {\r\n    // Estimate parallel resistance Rp\r\n    let min = +Infinity,\r\n      array = dataArray[0];\r\n\r\n    for (let xy of array) {\r\n      let x = xy[0],\r\n        slope = xy[1] / x;\r\n      if (slope < min && Math.abs(x) > 0.001) {\r\n        min = slope;\r\n      }\r\n    }\r\n\r\n    let Rp = 1 / min;\r\n    // var oOM = orderOfMagn(Rp);\r\n    //var roundedRp = Math.round(Rp * 1000 / oOM) * oOM / 1000;\r\n\r\n    return Rp;\r\n  }\r\n\r\n  function calcIrpAndNonLinRevCurr(dataArray, Rp) {\r\n    let array = dataArray[0],\r\n      nonLinDirCurr = [],\r\n      shuntCurrent = [],\r\n      nonLinCurr = [];\r\n\r\n    for (let VI of array) {\r\n      let V = VI[0],\r\n        Irp = V / Rp;\r\n      shuntCurrent.push([V, Irp]);\r\n\r\n      if (V < -0.0001) {\r\n        // Only looking at reverse polarization:\r\n        // Non-linear reverse current is total current minus parallel current (which is linear)\r\n        let Inl = VI[1] - Irp; // Inl -> 'nl' = 'Non-Linear'\r\n\r\n        // Deduce direct non linear current\r\n        nonLinDirCurr.unshift([-V, -Inl]);\r\n\r\n        // Reverse\r\n        nonLinCurr.push([V, Inl]);\r\n      }\r\n    }\r\n\r\n    // Combine reverse and direct\r\n    nonLinCurr = nonLinCurr.concat([[0, 0]], nonLinDirCurr);\r\n\r\n    return {\r\n      shunt: shuntCurrent,\r\n      nonLinear: nonLinCurr\r\n    };\r\n  }\r\n\r\n  function toggleIrp(modifDataArray, shuntCurrent, show) {\r\n    // Show or hide Irp on graph\r\n\r\n    let array = modifDataArray[0],\r\n      newArray = [],\r\n      i = 0,\r\n      sign = (show) ? 1 : -1;\r\n\r\n    for (let IV of array) {\r\n      newArray.push([IV[0], IV[1] + sign * shuntCurrent[i][1]]);\r\n      i++;\r\n    }\r\n\r\n    modifDataArray = [newArray];\r\n\r\n    return modifDataArray;\r\n  }\r\n\r\n  function toggleNonLinCurr(userData, modifDataArray, show) {\r\n\r\n    const nonLinearCurrent = userData.current.nonLinear;\r\n\r\n    let array1 = userData.dataArray[0],\r\n      array2 = userData.modifDataArray[0],\r\n      IV2,\r\n      newArray1 = [],\r\n      newArray2 = [],\r\n      sign = (show) ? 1 : -1,\r\n      i = 0;\r\n\r\n    for (let IV1 of array1) {\r\n      newArray1.push([IV1[0], IV1[1] + sign * nonLinearCurrent[i][1]]);\r\n      IV2 = array2[i];\r\n      newArray2.push([IV2[0], IV2[1] + sign * nonLinearCurrent[i][1]]);\r\n      i++;\r\n    }\r\n\r\n    return {\r\n      dataArray: [newArray1],\r\n      modifDataArray: [newArray2]\r\n    };\r\n  }\r\n\r\n  let SqResSum,\r\n    delS = [];\r\n\r\n  function calcSqResSum(params, dataArray, arrayCalc) {\r\n    // Calculates the sum of squared residuals\r\n\r\n    let n1 = params.n1.value,\r\n      Is1 = params.is1.value,\r\n      Rp = params.rp1.value,\r\n      Rs = params.rs.value,\r\n      T = params.t.value,\r\n      single = document.getElementById('singleDiode').checked,\r\n      n2, Is2;\r\n\r\n    SqResSum = 0;\r\n\r\n    if (single) {\r\n      // Single diode model\r\n      Is2 = 0;\r\n      n2 = 1;\r\n    } else {\r\n      // Dual diode model\r\n      Is2 = params.is2.value;\r\n      n2 = params.n2.value;\r\n    }\r\n\r\n    if (document.getElementById('series').checked) {\r\n      // Dual, series diode model\r\n      n1 = params.n1.value;\r\n    }\r\n\r\n    let r, calcI, j = 1, x1, x2, xy1, xy2, y1, y2, slope, x,\r\n      calcIV = arrayCalc[0],\r\n      array = dataArray[0],\r\n      data,\r\n      dSdn1 = 0,\r\n      dSdn2 = 0,\r\n      dSdIs1 = 0,\r\n      dSdIs2 = 0,\r\n      dSdRp = 0,\r\n      dSdRs = 0;\r\n\r\n    let dIdn1, dIdn2, dIdIs1, dIdIs2, dIdRp, dIdRs, exp1, exp2;\r\n\r\n    for (let row of array) {\r\n      // For each data point\r\n      x = row[0];\r\n\r\n      while (x > calcIV[j][0]) { j++; }\r\n      xy1 = calcIV[j - 1];\r\n      xy2 = calcIV[j];\r\n      x1 = xy1[0];\r\n      x2 = xy2[0];\r\n      y1 = xy1[1];\r\n      y2 = xy2[1];\r\n      data = row[1];\r\n\r\n      // Linear interpolation\r\n      slope = (y2 - y1) / (x2 - x1);\r\n      calcI = y1 + slope * (x - x1);\r\n\r\n      r = (calcI - data) / Math.abs(data);\r\n\r\n      if (isFinite(r)) {\r\n        exp1 = Math.exp(q * (x - Rs * calcI) / (n1 * k * T));\r\n        exp2 = Math.exp(q * (x - Rs * calcI) / (n2 * k * T));\r\n\r\n        dIdn1 = q * (Rs * calcI - x) / (Math.pow(n1, 2) * k * T * (1 + Rs / Rp + q * Is2 * Rs * exp2 / (n2 * k * T)) / (Is1 * exp1) + n1 * Rs * q);\r\n        dSdn1 += 2 * r * dIdn1 / Math.abs(data);\r\n\r\n        dIdn2 = q * (Rs * calcI - x) / (Math.pow(n2, 2) * k * T * (1 + Rs / Rp + q * Is1 * Rs * exp1 / (n1 * k * T)) / (Is2 * exp2) + n2 * Rs * q);\r\n        dSdn2 += 2 * r * dIdn2 / Math.abs(data);\r\n\r\n        dIdIs1 = (exp1 - 1) / (1 + q * Is1 * Rs * exp1 / (n1 * k * T) + q * Is2 * Rs * exp2 / (n2 * k * T) + Rs / Rp);\r\n        //dIdIs1 = (exp1 - 1) / (1 + q * Is1 * Rs * exp1 / (n1 * k * T) + Rs / Rp);\r\n        dSdIs1 += 2 * r * dIdIs1 / Math.abs(data);\r\n\r\n        dIdIs2 = (exp2 - 1) / (1 + q * Is1 * Rs * exp1 / (n1 * k * T) + q * Is2 * Rs * exp2 / (n2 * k * T) + Rs / Rp);\r\n        dSdIs2 += 2 * r * dIdIs2 / Math.abs(data);\r\n\r\n        dIdRp = (calcI * Rs - x) / (Math.pow(Rp, 2) * (1 + q * Is1 * Rs * exp1 / (n1 * k * T) + q * Is2 * Rs * exp2 / (n2 * k * T) + Rs / Rp));\r\n        dSdRp += 2 * r * dIdRp / Math.abs(data);\r\n\r\n        dIdRs = - calcI * (q * Is1 * exp1 / (n1 * k * T) + q * Is2 * exp2 / (n2 * k * T) + 1 / Rp) / (1 + Rs * (q * Is1 * exp1 / (n1 * k * T) + q * Is2 * exp2 / (n2 * k * T) + 1 / Rp));\r\n        //dIdRs = - calcI * (q * Is1 * exp1 / (n1 * k * T) + 1 / Rp) / (1 + Rs * (q * Is1 * exp1 / (n1 * k * T) + 1 / Rp));\r\n        dSdRs += 2 * r * dIdRs / Math.abs(data);\r\n\r\n        SqResSum += Math.pow(r, 2);\r\n      }\r\n      delS = [dSdn1, dSdIs1, dSdRp, dSdRs];\r\n      if (!single) {\r\n        delS.splice(1, 0, dSdn2);\r\n        delS.splice(3, 0, dSdIs2);\r\n      }\r\n    }\r\n\r\n    // Display residue\r\n    $('#s').text(SqResSum.toExponential(2));\r\n\r\n    return SqResSum;\r\n  }\r\n\r\n  function deriv(array) {\r\n    var der, prev, next, derArray = [], stringArray = 'V\\tln(I)\\td[ln(I)]/dV';\r\n    for (var i = 1; i < array.length - 1; i++) {//Derivative not calculated for 1st and last point\r\n      prev = array[i - 1];\r\n      next = array[i + 1];\r\n      der = (next[1] - prev[1]) / (next[0] - prev[0]);\r\n      derArray.push([array[i][0], der]);\r\n      stringArray = stringArray.concat('\\n' + array[i][0] + '\\t' + array[i][1] + '\\t' + der);\r\n    }\r\n    return derArray;\r\n  }\r\n\r\n  function lnOfArray(array) {\r\n    var xy, y, newArray = [];\r\n    for (var i = 0; i < array.length; i++) {\r\n      xy = array[i];\r\n      y = xy[1];\r\n      if (y != 0) {\r\n        newArray.push([xy[0], Math.log(Math.abs(y))]);\r\n      }\r\n    }\r\n\r\n    return newArray;\r\n  }\r\n\r\n  function findDiodes(userData, IprShowed, nonLinearCurrentShowed) {\r\n    let modifDataArray = userData.modifDataArray,\r\n      shuntCurrent = userData.current.shunt;\r\n\r\n    if (IprShowed) {\r\n      modifDataArray = toggleIrp(modifDataArray, shuntCurrent, false);\r\n    } // diode parameters better evaluated when Rp = infinity\r\n\r\n    if (nonLinearCurrentShowed) {\r\n      let result = toggleNonLinCurr(userData, modifDataArray, false);\r\n      modifDataArray = result.modifDataArray;\r\n    }\r\n\r\n    let noIrpNoSCLCarray = modifDataArray[0],\r\n      array = modifDataArray[0];\r\n\r\n    // 1st order derivative\r\n    let array1 = deriv(lnOfArray(array));\r\n\r\n    // 2nd order derivative\r\n    array = deriv(array1);\r\n\r\n    let i = array.length - 2,\r\n      prev,\r\n      dLn = array[i][1],\r\n      dLnMin = 0,\r\n      deltaLnMax = 0,\r\n      j = 0;\r\n\r\n    let avDelta = function (array) {\r\n      var sum = 0,\r\n        length = array.length;\r\n      for (var i = 1; i < length; i++) {\r\n        sum += Math.abs(array[i][1] - array[i - 1][1]);\r\n      }\r\n      return sum / (length - 1);\r\n    };\r\n\r\n    const avD = avDelta(array);\r\n\r\n    var iMin = i,\r\n      fluctIn2ndHalf = false;\r\n    do {\r\n      i = iMin;\r\n      dLn = array[i][1];\r\n      var maxPassed = false;\r\n      do {\r\n        // Looking for minima between 0.04 V and Vmax\r\n        i--;\r\n        prev = dLn;\r\n        dLn = array[i][1];\r\n\r\n        fluctIn2ndHalf += Math.abs(dLn - prev) > avD && i < array.length / 2;\r\n        maxPassed += prev > dLn && Math.abs(dLn - prev) < avD;\r\n        var carryOn = !maxPassed || dLn < prev;\r\n      } while (i >= 0 && array[i][0] > 0.04 && carryOn && !fluctIn2ndHalf);\r\n\r\n      iMin = i + 1;\r\n      dLnMin = prev;\r\n\r\n      let dLnMax = dLnMin;\r\n\r\n      prev = -Infinity;\r\n      i = iMin - 1;\r\n      var iMax = iMin;\r\n\r\n      while (i >= 0 && array[i][0] > 0.04) {\r\n        // Looking for a maxima between 0.04 V and Vmax\r\n        dLn = array[i][1];\r\n\r\n        if (dLn < prev && prev > dLnMax && Math.abs(dLn - prev) < avD) {\r\n          iMax = i;\r\n          dLnMax = prev;\r\n        }\r\n        prev = dLn;\r\n        i--;\r\n      }\r\n\r\n      if (dLnMax - dLnMin > deltaLnMax) {\r\n        deltaLnMax = dLnMax - dLnMin;\r\n        var iMaxMax = iMax;\r\n      }\r\n      j++;\r\n    } while (iMax != iMin && j < 10 && !fluctIn2ndHalf);\r\n\r\n    if (!iMaxMax) {\r\n      return 'noDiode';\r\n    }\r\n\r\n    i = iMax = iMaxMax;\r\n    dLn = array[i][1];\r\n    do {\r\n      prev = dLn;\r\n      i--;\r\n      dLn = array[i][1];\r\n    } while (Math.abs(dLn) < Math.abs(prev) || dLn >= 0);\r\n\r\n    let iD1 = i + 2,\r\n      D1dLn = array1[iD1 + 1][1];\r\n\r\n    i = iMax;\r\n\r\n    do {\r\n      prev = dLn;\r\n      i++;\r\n      dLn = array[i][1];\r\n    } while (Math.abs(dLn) < Math.abs(prev) || dLn >= 0);\r\n\r\n    let iD2 = i - 1,\r\n      D2dLn = array1[iD2 + 1][1];\r\n\r\n    const length = array.length - 2;\r\n\r\n    iD2 = length - iD2;\r\n    iD1 = length - iD1;\r\n\r\n    /* iD2 (and iD1) are the indexes of the maxima (and minima), starting from the *end* of the original array,\r\n    in case points in reverse are missing after removal of Irp and SCLC */\r\n\r\n    return {\r\n      noIrpNoSCLCarray: noIrpNoSCLCarray,\r\n      diodes: [D2dLn, D1dLn, iD2, iD1]\r\n    };\r\n  }\r\n\r\n  function estimD1D2Rs(params, userData, findDiodesResult) {\r\n    if (document.getElementById('series').checked) {\r\n      // For now, no estimation for series model\r\n      return;\r\n    }\r\n\r\n    const paramValues = params.value,\r\n      paramChecked = params.checked;\r\n\r\n    let maxmin = findDiodesResult.diodes;\r\n\r\n    if (maxmin === 'noDiode') {\r\n      // TODO: Display message\r\n      return;\r\n    }\r\n\r\n    let dualDiode = !document.getElementById('singleDiode').checked,\r\n      array = findDiodesResult.noIrpNoSCLCarray,\r\n\r\n      D1dLn = maxmin[1],\r\n      D2dLn = maxmin[0],\r\n      VIAtd1 = array[array.length - 4 - maxmin[3]],\r\n      VIAtd2 = array[array.length - 4 - maxmin[2]],\r\n      T = paramValues.t,\r\n      A = q / (k * T),\r\n      n2 = A / D2dLn,\r\n      n, n1, Is1, Rs, Is2;\r\n\r\n    if (dualDiode) {\r\n      if (paramChecked.n2) {\r\n        n = n2;\r\n      } else {\r\n        n = n2 = paramValues.n2;\r\n      }\r\n      if (paramChecked.n1) {\r\n        n1 = A / D1dLn;\r\n      } else {\r\n        n1 = paramValues.n1;\r\n      }\r\n      if (paramChecked.is1) {\r\n        Is1 = VIAtd1[1] / (Math.exp((VIAtd1[0] * A / n1) - 1));\r\n      } else {\r\n        Is1 = paramValues.is1;\r\n      }\r\n    } else {\r\n      // Single diode\r\n      n = n2;\r\n    }\r\n\r\n    if (paramChecked.rs) {\r\n      Rs = estimRs(array, T, n);\r\n    } else {\r\n      Rs = paramValues.rs;\r\n    }\r\n\r\n    if (paramChecked.is2) {\r\n      Is2 = VIAtd2[1] / (Math.exp((VIAtd2[0] - VIAtd2[1] * Rs) * A / n2) - 1);\r\n    } else {\r\n      Is2 = paramValues.is2;\r\n    }\r\n\r\n    let newRp;\r\n\r\n    if (paramChecked.rp1) {\r\n      newRp = userData.estimatedParameters.Rp;\r\n    } else {\r\n      newRp = paramValues.rp1;\r\n    }\r\n\r\n    $('td.estimation#rp1').text(newRp.toPrecision(3));\r\n    $('td.estimation#rs').text(Rs.toPrecision(2));\r\n\r\n    if (dualDiode) {\r\n      return {\r\n        n1: n1,\r\n        n2: n2,\r\n        Is1: Is1,\r\n        Is2: Is2,\r\n        Rp1: newRp,\r\n        Rs: Rs\r\n      };\r\n    } else {\r\n      return {\r\n        n1: n2,\r\n        Is1: Is2,\r\n        Rp1: newRp,\r\n        Rs: Rs\r\n      };\r\n    }\r\n  }\r\n\r\n  function estimRs(array, T, n) {\r\n    var dIdV = deriv(array),\r\n      i = array.length - 2,\r\n      dIdVati = dIdV[i - 1][1],\r\n      exp,\r\n      A = q / (n * k * T),\r\n      B, C,\r\n      IVati = array[i],\r\n      I = IVati[1],\r\n      V = IVati[0],\r\n      Rs = 0;\r\n\r\n    do {\r\n      exp = Math.exp(A * (V - I * Rs));\r\n      B = A * exp / (exp - 1);\r\n      C = B / (1 / I + Rs * B);\r\n      Rs += 0.01;\r\n    } while (C > dIdVati);\r\n\r\n    return Rs;\r\n  }\r\n\r\n  function updateParams(params, plot, updateRangeInput) {\r\n    // Update number input and result table\r\n\r\n    if (updateRangeInput) {\r\n      var evt = document.createEvent('HTMLEvents');\r\n      evt.initEvent('change', false, false);\r\n    }\r\n\r\n    for (let param of params) {\r\n      const id = param[0],\r\n        value = param[1];\r\n\r\n      let element = $('[type=number].' + id).get(0);\r\n\r\n      if (updateRangeInput) {\r\n        element.dispatchEvent(evt);\r\n      }\r\n\r\n      const $td = $('td#final-' + id),\r\n        isScaleLog = $(element).hasClass('logscale'),\r\n        formattedValue = (isScaleLog) ? value.toExponential(2) : value.toPrecision(2);\r\n\r\n      element.value = value;\r\n      $td\r\n        .text(formattedValue);\r\n\r\n      parameters.update($(element));\r\n    }\r\n\r\n    const ivResult = calcIV(parameters, getModel());\r\n\r\n    arrayCalc = ivResult.arrayCalc;\r\n    plotStyle = ivResult.plotStyle;\r\n\r\n    calcSqResSum(parameters, userData.dataArray, arrayCalc);\r\n  }\r\n\r\n  function vary() {\r\n    // Varies checked diode parameters until\r\n    // sum of square residuals is minimized\r\n\r\n    const eps = mchEps;\r\n\r\n    var n1 = parameters.n1.value,\r\n      n1vary = parameters.n1.checked,\r\n      Is1 = parameters.is1.value,\r\n      Is1vary = parameters.is1.checked,\r\n      Rp = parameters.rp1.value,\r\n      Rpvary = parameters.rp1.checked,\r\n      Rs = parameters.rs.value,\r\n      Rsvary = parameters.rs.checked;\r\n\r\n    // Single diode model\r\n    let params = [\r\n      ['n1', n1, eps, n1vary],\r\n      ['is1', Is1, eps, Is1vary],\r\n      ['rp1', Rp, eps, Rpvary],\r\n      ['rs', Rs, eps, Rsvary]\r\n    ];\r\n\r\n    if (document.getElementById('doubleDiode').checked) {\r\n      // Dual diode model\r\n      var Is2 = parameters.is2.value,\r\n        Is2vary = parameters.is2.checked,\r\n        n2 = parameters.n2.value,\r\n        n2vary = parameters.n2.checked;\r\n      params = [['n1', n1, eps, n1vary], ['n2', n2, eps, n2vary], ['is1', Is1, eps, Is1vary], ['is2', Is2, eps, Is2vary], ['rp1', Rp, eps, Rpvary], ['rs', Rs, eps, Rsvary]];\r\n    }\r\n\r\n    var del,\r\n      S,\r\n      newPar,\r\n      j = 0,\r\n      ii = 0,\r\n      sign,\r\n      stop = false;\r\n\r\n    interval = setInterval(\r\n      function () {\r\n        S = SqResSum;\r\n        var newPars = [];\r\n        //del = delS;\r\n        for (var i = 0; i < params.length; i++) {\r\n          if (params[i][3]) {\r\n            // This parameter is allowed to vary\r\n            del = delS[i];\r\n            sign = del / Math.abs(del);\r\n\r\n            newPar = params[i][1] * Math.pow((1 + params[i][2]), -sign); //update parameter\r\n\r\n            updateParams([[params[i][0], newPar]], false, false);\r\n\r\n            j = 0;\r\n            while (del / Math.abs(del) != delS[i] / Math.abs(delS[i]) && j < 100 && newPar !== 0) {\r\n              params[i][2] /= 2;\r\n              newPar = params[i][1] * Math.pow((1 + params[i][2]), -sign); //update parameter\r\n              updateParams([[params[i][0], newPar]], false, false);\r\n              j++;\r\n            }\r\n\r\n            var jj = 0;\r\n            while (del / Math.abs(del) == delS[i] / Math.abs(delS[i]) && jj < 100 && newPar !== 0) {\r\n              params[i][2] *= 2;\r\n              newPar = params[i][1] * Math.pow((1 + params[i][2]), -sign); //update parameter\r\n              updateParams([[params[i][0], newPar]], false, false);\r\n\r\n              jj++;\r\n            }\r\n            params[i][1] = newPar;\r\n            newPars.push(newPar);\r\n\r\n            if (isNaN(newPar)) {\r\n              stop += true;\r\n            }\r\n          }\r\n        }\r\n\r\n        ii++;\r\n\r\n        const dS = SqResSum - S;\r\n\r\n        if (typeof S === 'number') {\r\n          $('#ds').text(dS.toExponential(2));\r\n        } else {\r\n          $('#ds').empty();\r\n        }\r\n\r\n        const threshold = document.getElementById('threshold').value,\r\n          fitSuccessful = Math.abs(dS) < threshold;\r\n\r\n        if (fitSuccessful || ii > 1000 || stop) {\r\n          if (fitSuccessful) {\r\n            const addContext = true;\r\n            tableSuccessContext(addContext);\r\n          }\r\n          togglePlayButton();\r\n          const start = false;\r\n          startPauseVary(start);\r\n\r\n          // Sync number and range inputs\r\n          syncAllInputs();\r\n        }\r\n        if (document.webkitHidden) {\r\n          // No use to plot: the page is not visible (Webkit only)\r\n        } else {\r\n          combDataAndCalc(/*arrayCalc, plotStyle, scale*/);\r\n        }\r\n      }\r\n      , 1);\r\n  }\r\n\r\n  function startPauseVary(start) {\r\n    // start parameter is a boolean\r\n\r\n    if (start === true) {\r\n      const addContext = false;\r\n      tableSuccessContext(addContext);\r\n      vary();\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n  }\r\n\r\n  return {};\r\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);